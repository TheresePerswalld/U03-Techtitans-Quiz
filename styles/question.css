
.question {
    width: 75%;
    margin-inline: auto;
    padding-top: 5rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    text-align: center;
}

.question__text {
    user-select: none;

    position: relative;
    margin-bottom: 2rem;
    padding: 2rem;
    padding-right: 8rem;
    background: var(--shadow);
    border-radius: 6px;
    text-align: left;
    font-size: 1.8rem;
    font-weight: 600;
    color: white;
    text-shadow: 1px 1px 4px var(--body-text-shadow);
    transition: transform 0.5s ease;
    overflow: hidden;
}

.question__bg-icon {
    background: var(--question-bg-icon);
    position: absolute;
    right: 2rem;
    top: 50%;
    font-size: 5rem;
    transform: translateY(-50%);
}

.question__options-container {
    display: contents;
}

.question__option {
    user-select: none;
    --border: #b847a5;
    --letter-bg: #D462C3;
    --letter-text: white;
    position: relative;
    white-space: normal;
    font-family: inherit;
    font-weight: 550;
    background-color: white;
    outline: .35rem solid transparent;
    padding: 1rem;
    border-radius: 100px;
    text-align: left;
    display: flex;
    align-items: center;
    gap: 1rem;
    transform: translateX(-120%);
    left: 0;
    transition: all .4s, transform 0.5s ease;

    &:hover {
      cursor: pointer;
      left: -2rem;
      outline-color: var(--border);
      box-shadow: -1.5rem 0 10px 5px var(--shadow);
  }
}

.question__answer-letter {
    background: var(--letter-bg);
    color: white;
    height: 3rem;
    width: 3rem;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
}

.question__option:hover {
    border-color: #D462C3;
}

.question__option:nth-child(2) {
  --border: #2162ad;
  --letter-bg: #3784dc;
  --letter-text: white;
}

.question__option:nth-child(3) {
  --border: #06779d;
  --letter-bg: #0BA1B8;
  --letter-text: white;
}


/* Progress bar / Timer */

.timer-progress {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    position: absolute;
    width: 100%;
    top: 0;
    left: 0;
    padding: 2rem;
}

.timer-progress__bar {
    position: relative;
    width: 100%;
    height: 30px;
    background-color: white;
    border-radius: 5px;
    border: 2px solid white;
    overflow: hidden;
  }
  
.timer-progress__status {
    position: absolute;
    width: 0%;
    height: 100%;
    background: linear-gradient(
        135deg,
        #42B0FF,
        var(--body-bg-2)
        );
}

.timer {
    --time-font-size: clamp(3rem, 10vmin + 1rem, 10rem);
    height: calc(var(--time-font-size) + 4rem);
    display: flex;
    flex-direction: column;
}

.timer__time {
    user-select: none;

    color: var(--timer-text);
    font-size: var(--time-font-size);
    font-weight: 800;
    text-align: center;
    line-height: 1.1;
    text-shadow:
        1px 1px 5px var(--timer-shadow),
        1px 1px 10px var(--timer-shadow),
        1px 1px 20px var(--timer-shadow);
}

.timer__unit {
    font-size: 1.8rem;
    color: var(--timer-text);
    font-weight: 600;
    text-shadow:
        1px 1px 2px var(--timer-shadow),
        1px 1px 6px var(--timer-shadow)
    ;
}

/* Animations */

.slideIn { animation: slideFromLeft 1s ease-in-out forwards }

@keyframes slideFromLeft {
    0% { transform: translateX(-100vw) }
    100% { transform: translateX(0) }
}

.slideOut { animation: slideToRight 1s ease-in-out forwards }

@keyframes slideToRight {
    0% { transform: translateX(0) }
    100% { transform: translateX(100vw) }
}

.slideTextIn { animation: slideToMid 1s ease-in-out forwards }

@keyframes slideToMid {
    0% { transform: translateY(-50vh) }
    100% { transform: translateY(0%) }
}

.slideTextOut { animation: slideToBottom 1s ease-in-out forwards }

@keyframes slideToBottom {
    0% { transform: translateY(0) }
    100% { transform: translateY(100vh) }
}

.grow { animation: growShrink .5s ease-in-out forwards }
.shrink { animation: growShrink .5s ease-in-out backwards }

@keyframes growShrink {
    0% { transform: scale(0) }
    100% { transform: scale(1) }
}